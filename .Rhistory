man()
getwd()
install.packages("DLMtools", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("DLMtool", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("DLMtool", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("DLMtool", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("DLMtools", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
m<-c(78, 90, 67, 82, 68, 61, 71, 71, 78)
n<-c(56, 57, 50, 63, 49, 53, 62, 52, 59)
cor.test(m,n, alternative=c("greater"), method=c("spearman"))
install.packages("TMB")
install.packages("TMB")
install.packages("~/TMB/TMB_1.7.11.tgz", repos = NULL, type = .Platform$pkgType)
install.packages("bayesbio")
install.packages("TMB")
source("http://flr-project.org/R/instFLR.R")
install.packages("FD")
library("FD", lib.loc="~/Library/R/3.4/library")
vignett(fd)
vignette(FD)
library(reshape2)
library(maps)
library(mapdata)
library(ggplot2)
library(RColorBrewer)
library(sp)
library(rgdal)
library(rgeos)
# plyr mus be loaded befor dplyr for both to work
library(plyr)
library(dplyr)
library(tidyr)
library(maptools)
library(marmap)
library(classInt)
setwd("~/github/sudan")
source('multiplot function.R', encoding='UTF-8')
#' CATCH DATA
#' --------------------------
catch<-read.csv2("catch.csv")
catch$survey<-as.factor(catch$survey)
catch$CPUEw<-catch$weight/catch$Fhrs
catch$CPUEn<-catch$number/catch$Fhrs
#' Add Month. Year survey column
catch$survey_m<-as.character(catch$survey)
catch$survey_m<-replace(catch$survey_m, grep("2012901", catch$survey_m), "Survey 1: Nov. 2012")
catch$survey_m<-replace(catch$survey_m, grep("2013002", catch$survey_m), "Survey 2: May 2013")
catch$survey_m<-replace(catch$survey_m, grep("2013005", catch$survey_m), "Survey 3: Nov. 2013")
#' Species and L-W data
species.list<-read.csv2("Species_table.csv")
length.weight<-read.csv2("LW_pilot_sudan12_15.csv")
#' SUDAN MAP DATA
#' ---------------------------
world<- map_data("worldHires", c("Sudan", "Ethiopia"))
world$survey_m<-c("Survey 1: Nov. 2012")
world2<-world
world2$survey_m<-c("Survey 2: May 2013")
world3<-world
world3$survey_m<-c("Survey 3: Nov. 2013")
world<-rbind(world, world2, world3)
#'  SPATIAL POLYGONS FOR MANAGEMENT AREAS
#' -------------------------------------------
setwd("~/github/sudan/sudan_management_areas/")
ManageAreas<-readOGR(dsn = ".", "sudan_regions")
setwd("~/github/sudan")
#' setting correct projection LAT LON
ManageAreas <- spTransform(ManageAreas, CRS("+proj=longlat +ellps=GRS80"))
#' Create  area map with numbers for each region
ManageAreas.f<-fortify(ManageAreas, region="id") #creates X - Y points of the polygons
cnames <- aggregate(cbind(long, lat) ~ id, data=ManageAreas.f, FUN=function(x)mean(range(x)))
cnames$id<-c(1:7)
#' DEFINE VARIABLES
#' ---------------------------
#' position of Port Sudan
ps<-rbind(data.frame(x=37.21709967,y=19.600512, group=1, survey_m=c("Survey 1: Nov. 2012")),data.frame(x=37.21709967,y=19.600512, group=1, survey_m=c("Survey 2: May 2013") ),data.frame(x=37.21709967,y=19.600512, group=1, survey_m=c("Survey 3: Nov. 2013") ))
catch.points<- SpatialPoints(catch[8:9])
proj4string(catch.points) <- proj4string(ManageAreas)
catch.areas<-over(catch.points, ManageAreas)
catch.areas$id <- as.integer(catch.areas$id)
#' correct for errors in numbering areas
catch.areas[grep("3|4|5|6|8", catch.areas$id),]$id <- catch.areas[grep("3|4|5|6|8", catch.areas$id),]$id-1
catch.areas$id <- as.factor(catch.areas$id)
catch <- cbind(catch, catch.areas[1:2])
#' add area no to stations outside of managment area polygons
new_df <- subset(catch, is.na(catch$name))
new_df$id <- as.factor(new_df$Area)
new_df[1,]$name <- c("Arakiai")
new_df[2:8,]$name <- c("Suakin Archipelago")
new_df[9:16,]$name <- c("Donganab")
catch <-rbind(subset(catch, !is.na(catch$name)), new_df)
#' Change family names to Upper & Lower case
catch$FamGroup2 <- paste(toupper(substr(catch$FamGroup, 1, 1)), tolower(substr(catch$FamGroup, 2, 20)), sep="")
catch$FamGroup2 <- as.factor(catch$FamGroup2)
#' SELECTING AND MANIPULATING CATCH DATA
#' -----------------------------------
#' selecting only stations with catch
catch1<-subset(catch, Sci_name!="NO CATCH")
#' removes stations shorter than 1 hour
catch1<-subset(catch1, Fhrs>1)
catch.traps<-subset(catch1, gear!="GN")
#' reordering the species groups
fam.names<-c("Acanthuridae", "Carangidae", "Chirocentridae", "Lethrinidae", "Lutjanidae", "Scombridae",     "Serranidae", "Other spp" )
levels(catch1$FamGroup2)<-fam.names
#' PLOTTING CATCH POSITIONS BY SURVEY (FIGURE 2)
#' ----------------------------------
sudan.map<-ggplot(catch, aes(x=lon, y=lat, group=survey_m)) + geom_point(shape="+", size=6, aes(group=survey_m, colour= survey_m)) + facet_wrap(~survey_m, ncol=3) + geom_polygon(data=world, colour="gray35", fill="gray85", aes(x=long, y=lat, group=survey_m)) +  coord_cartesian(xlim = c(36.5, 39), ylim=c(17.7, 22.5)) + theme_classic() + geom_point(data=ps, size=5, colour="gray35", aes(x=x, y=y)) + geom_text(data=ps, label="PZU", size=5,  hjust=1, vjust=-1.2,  aes(x=x, y=y, group=survey_m)) +scale_colour_brewer(type = "seq", palette = "Dark2", name="Survey month & year", labels=c("Nov. 2012", "May. 2013", "Nov. 2013")) + theme(legend.position="none") + xlab("Longitude") + ylab("Latitude")
sudan.map
group_by(catch, id) %>%
summarise(
count = n(),
mean = mean(CPUEw, na.rm = TRUE),
sd = sd(CPUEw, na.rm = TRUE),
median = median(CPUEw, na.rm = TRUE),
IQR = IQR(CPUEw, na.rm = TRUE)
)
install.packages("ggpubr")
# boxplot of catch pr mgmt areas
library("ggpubr")
ggboxplot(catch, x = "id", y = "CPUEw",
color = "group", palette = c("#00AFBB", "#E7B800", "#FC4E07"),
order = c("1", "2", "3", "4", "5", "6", "7"),
ylab = "CPUE kg/hr", xlab = "management areas")
ggboxplot(catch, x = "id", y = "CPUEw",
color = "id", palette = c("#00AFBB", "#E7B800", "#FC4E07"),
order = c("1", "2", "3", "4", "5", "6", "7"),
ylab = "CPUE kg/hr", xlab = "management areas")
display.brewer.all(
)
mypalette<-brewer.pal(7,"Accent")
ggboxplot(catch, x = "id", y = "CPUEw",
color = "id", palette = mypalette,
order = c("1", "2", "3", "4", "5", "6", "7"),
ylab = "CPUE kg/hr", xlab = "management areas")
ggsave("boxplot_mgmt_areas_cpue.png")
# Kruskal -Wallis test
kruskal.test(CPUEw ~ id, data = catch)
pairwise.wilcox.test(catch$CPUEw, catch$id, p.adjust.method = "BH")
install.packages("FSA")
# Dunn test for multiple comparisons
library("FSA")
DT <- dunnTest(CPUEw ~id, data=catch, method="BH")
DT <- dunnTest(CPUEw ~id, data=catch, method="bh")
DT
group_by(catch, id) %>%
summarise(
count = n(),
mean = mean(CPUEn, na.rm = TRUE),
sd = sd(CPUEn, na.rm = TRUE),
median = median(CPUEn, na.rm = TRUE),
IQR = IQR(CPUEn, na.rm = TRUE)
)
ggboxplot(catch, x = "id", y = "CPUEn",
color = "id", palette = mypalette,
order = c("1", "2", "3", "4", "5", "6", "7"),
ylab = "CPUE no fish/hr", xlab = "management areas")
ggsave("boxplot_mgmt_areas_cpue_N.png")
# Kruskal -Wallis test
kruskal.test(CPUEn ~ id, data = catch)
pairwise.wilcox.test(catch$CPUEn, catch$id, p.adjust.method = "BH")
DT <- dunnTest(CPUEn ~id, data=catch, method="bh")
DT
DT <- dunnTest(CPUEw ~id, data=catch, method="bh")
DT
dunnTest(CPUEw ~id, data=catch)
DT
dunnTest(CPUEw ~id, data=catch)
dunnTest(CPUEw ~id, data=catch, method="bonferroni")
# Kruskal -Wallis test - By areas
kruskal.test(CPUEw ~ id, data = catch)
colnames(catch)
# by survey
kruskal.test(CPUEw ~ survey, data = catch)
# by survey
kruskal.test(CPUEn ~ survey, data = catch)
group_by(catch, survey) %>%
summarise(
count = n(),
mean = mean(CPUEn, na.rm = TRUE),
sd = sd(CPUEn, na.rm = TRUE),
median = median(CPUEn, na.rm = TRUE),
IQR = IQR(CPUEn, na.rm = TRUE)
)
mypalette<-brewer.pal(7,"Accent")
ggboxplot(catch, x = "survey", y = "CPUEn",
color = "survey", palette = mypalette,
order = c("1", "2", "3", "4", "5", "6", "7"),
ylab = "CPUE no fish/hr", xlab = "surveys")
ggboxplot(catch, x = "survey", y = "CPUEn",
color = "survey", palette = mypalette),
ylab = "CPUE no fish/hr", xlab = "surveys")
ggboxplot(catch, x = "survey", y = "CPUEn",
color = "survey", palette = mypalette,
ylab = "CPUE no fish/hr", xlab = "surveys")
ggsave("boxplot_surveys.png")
# by survey
kruskal.test(CPUEn ~ survey, data = catch)
pairwise.wilcox.test(catch$CPUEn, catch$survey, p.adjust.method = "BH")
DT <- dunnTest(CPUEn ~survey, data=catch, method="bh")
DT
#' CPUE (weight) PLOT BY GEAR TYPE (FIGURE 3)
#' ------------------------------
catch.3gear<-subset(catch, gear=="GN" | gear=="HL" | gear =="TB")
gear.plot <- ggplot(catch.3gear, aes(FamGroup2, fill=survey_m)) + geom_bar(binwidt=0.2, aes( weight=CPUEw)) +theme_bw() +facet_grid(gear ~ survey) + coord_flip() +xlab("") + ylab("kg fish/hour fishing")  + guides(fill=guide_legend(title="Survey"))
gear.plot + theme(panel.grid.major = element_blank()) + theme(panel.grid.minor = element_blank())
ggsave("Fig 3 gearplot.tiff")
#' CPUE (weight) PLOT BY MANAGEMENT AREAS (FIGURE 4)
#' ---------------------------------
lat.plot<-ggplot(catch1, aes(Area, fill=FamGroup2)) + geom_bar(binwidt=0.2, aes( weight=CPUEw)) +theme_classic() + scale_x_reverse(breaks=c(1,2,3,4,5,6,7))
lat.plot + scale_fill_brewer(palette="RdYlBu", name="Family groups") + coord_flip() + theme(legend.title = element_text(size=14, face="bold")) + theme(legend.text = element_text(size=12)) + ylab("CPUE weight (kg) of fish/hr fishing") + xlab("Management areas from N (1) to S (7)")
#+ theme(axis.text.x = element_blank())
#lat.plot
#figure
ggsave("Fig 4 management area CPUE weight.tiff")
###################################
###################################
#' ADDITIONAL ANALYSES
#' --------------------------------
#' SPECIES NUMBERS PR AREA
#' ------------------------------
#' not presented as figures in the MS submitted to Frontiers in Nov'17
ss.list<-unique(catch1$ss)
spue.table<-data.frame(0,0,0,0,0)
colnames(spue.table)<-c("ss","area", "spue", "nspec", "survey")
for (i in 1:length(ss.list)) {
spue.table[i,1] <- subset(catch1, catch1$ss == ss.list[i])$ss[1]
spue.table[i,2] <- subset(catch1, catch1$ss == ss.list[i])$Area[1]
spue.table[i,3] <- nrow(subset(catch1, catch1$ss == ss.list[i]))/subset(catch1, catch1$ss == ss.list[i])$Fhrs[1]
spue.table[i,4] <- nrow(subset(catch1, catch1$ss == ss.list[i]))
spue.table[i,5] <- as.integer(substr(ss.list[i], 1,7))
}
spue.agg<-aggregate(spue.table, list(Area = spue.table$area), mean)
sp_n_area <- catch %>% group_by(name) %>% summarise(Tot_N_species=n_distinct(Sci_name))
summary(sp_n_area)
View(sp_n_area)
#ANOVA Species Numbers (not corrected for effort)
spue.df<-spue.table
spue.df$area<-factor(spue.df$area, labels = c(1:7))
spue.anova<-lm(nspec ~ area, data = spue.df)
summary(spue.anova)
#significant for area 2
anova(spue.anova)
confint(spue.anova)
#Tukey post.hoc test
spue.aov<-aov(nspec ~ area, data = spue.df)
posthoc<-TukeyHSD(x=spue.aov, 'area', conf.level=0.95)
posthoc
#kruskal Wallis
kruskal.test(nspec ~ area, data = spue.df)
ggsave("Fig 3 gearplot.pdf")
ggsave("Fig 3 gearplot.pdf")
lat.plot + scale_fill_brewer(palette="RdYlBu", name="Family groups") + coord_flip() + theme(legend.title = element_text(size=14, face="bold")) + theme(legend.text = element_text(size=12)) + ylab("CPUE weight (kg) of fish/hr fishing") + xlab("Management areas from N (1) to S (7)")
ggsave("Fig 4 management area CPUE weight.pdf")
gear.plot + theme(panel.grid.major = element_blank()) + theme(panel.grid.minor = element_blank())
ggsave("Fig 3 gearplot.pdf")
